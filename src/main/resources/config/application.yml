# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include: ['configprops', 'env', 'health', 'info', 'jhimetrics', 'logfile', 'loggers', 'prometheus', 'threaddump']
  endpoint:
    health:
      show-details: when_authorized
      roles: 'ROLE_ADMIN'
    jhimetrics:
      enabled: true
  info:
    git:
      mode: full
  health:
    mail:
      enabled: false # When using the MailService, configure an SMTP server and set this to true
  metrics:
    export:
      # Prometheus is the default metrics backend
      prometheus:
        enabled: true
        step: 60
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    tags:
      application: ${spring.application.name}
    web:
      server:
        request:
          autotime:
            enabled: true

spring:
  application:
    name: tse
  profiles:
    # The commented value for `active` can be replaced with valid Spring profiles to load.
    # Otherwise, it will be filled in by maven when building the JAR file
    # Either way, it can be overridden by `--spring.profiles.active` value passed in the commandline or `-Dspring.profiles.active` set in `JAVA_OPTS`
    active: #spring.profiles.active#
  jmx:
    enabled: false
  data:
    jpa:
      repositories:
        bootstrap-mode: deferred
  jpa:
    open-in-view: false
    properties:
      hibernate.jdbc.time_zone: UTC
      hibernate.id.new_generator_mappings: true
      hibernate.connection.provider_disables_autocommit: true
      hibernate.cache.use_second_level_cache: true
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: false
      # modify batch size as necessary
      hibernate.jdbc.batch_size: 25
      hibernate.order_inserts: true
      hibernate.order_updates: true
      hibernate.query.fail_on_pagination_over_collection_fetch: true
      hibernate.query.in_clause_parameter_padding: true
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
  messages:
    basename: i18n/messages
  main:
    allow-bean-definition-overriding: true
    banner-mode: off
  task:
    execution:
      thread-name-prefix: tse-task-
      pool:
        core-size: 2
        max-size: 50
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: tse-scheduling-
      pool:
        size: 2
  thymeleaf:
    mode: HTML
  output:
    ansi:
      console-available: true

server:
  servlet:
    session:
      cookie:
        http-only: true

# Properties to be exposed on the /info management endpoint
info:
  # Comma separated list of profiles that will trigger the ribbon to show
  display-ribbon-on-profiles: 'dev'

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  clientApp:
    name: 'tseApp'
  # By default CORS is disabled. Uncomment to enable.
  # cors:
  #     allowed-origins: "*"
  #     allowed-methods: "*"
  #     allowed-headers: "*"
  #     exposed-headers: "Authorization,Link,X-Total-Count"
  #     allow-credentials: true
  #     max-age: 1800
  mail:
    from: tse@localhost
  swagger:
    default-include-pattern: /api/.*
    title: tse API
    description: tse API documentation
    version: 0.0.1
    terms-of-service-url:
    contact-name:
    contact-url:
    contact-email:
    license: unlicensed
    license-url:
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:

exchange-gateway:
  api-key: api-key-1
  secret-key: secret-key-1
  api-host: api-adapter.backend.currency.com
  base-rest-api-url: https://${exchange-gateway.api-host}/api/v1
  series-uri: ${exchange-gateway.base-rest-api-url}/klines
  order-uri: ${exchange-gateway.base-rest-api-url}/order
  wss-connection-uri: wss://${exchange-gateway.api-host}/connect
  current-price-wss-endpoint: marketData.subscribe
  order-fee-percent: 0.2 # 0.2% (note: 1% should be set as 1, not as 0.01)
  interval-to-representation-map:
    ONE_MINUTE: 1m
    FIVE_MINUTES: 5m
    FIFTEEN_MINUTES: 15m
    THIRTY_MINUTES: 30m
    ONE_HOUR: 1h
    FOUR_HOURS: 4h
    ONE_DAY: 1d
  asset-code-delimiter: '/'
  number-of-amount-selection-steps: 20
  symbol-settings:
    BTC_USD:
      name: BTC/USD
      precision: 4
    BCH_USD:
      name: BCH/USD
      precision: 3
    BCH_BTC:
      name: BCH/BTC
      precision: 5
    ETH_USD:
      name: ETH/USD
      precision: 3
    ETH_BTC:
      name: ETH/BTC
      precision: 5
    LTC_USD:
      name: LTC/USD
      precision: 3
    LTC_BTC:
      name: LTC/BTC
      precision: 5
    XRP_USD:
      name: XRP/USD
      precision: 5
    XRP_BTC:
      name: XRP/BTC
      precision: 8
    BAL_USD:
      name: BAL/USD
      precision: 4
    BAL_BTC:
      name: BAL/BTC
      precision: 6
    CAKE_USD:
      name: CAKE/USD
      precision: 4
    CAKE_BTC:
      name: CAKE/BTC
      precision: 7
    CRV_USD:
      name: CRV/USD
      precision: 4
    CRV_BTC:
      name: CRV/BTC
      precision: 8
    MKR_USD:
      name: MKR/USD
      precision: 4
    MKR_BTC:
      name: MKR/BTC
      precision: 5
  asset-chains:
    1: USD,ETH,BTC,USD
    2: USD,BCH,BTC,USD
    3: USD,LTC,BTC,USD
    4: USD,XRP,BTC,USD
    5: USD,BAL,BTC,USD
    6: USD,CAKE,BTC,USD
    7: USD,CRV,BTC,USD
    8: USD,MKR,BTC,USD
  chain-exchange-run-interval-in-millis: 10000
  rate-limit-per-second: 9
  retry-attempts-number: 4
  retry-backoff-in-milliseconds: 500

telegram:
  url-format: https://api.telegram.org/bot%s/sendMessage?chat_id=%s&parse_mode=html&text=%s
  token: token
  chat-id: chat-id
  enabled: false

logs.dir: logs
